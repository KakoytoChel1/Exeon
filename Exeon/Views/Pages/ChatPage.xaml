<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="Exeon.Views.Pages.ChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Exeon.Views.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:chat_models="using:Exeon.Models.Chat"
    xmlns:vm_tools="using:Exeon.ViewModels.Tools"
    xmlns:converters="using:Exeon.ViewModels.Converters"
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    Background="{ThemeResource SolidBackgroundFillColorBaseBrush}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--Chat field-->
        <Grid Grid.Row="0">

            <ListView
                x:Name="ChatListView"
                Margin="0,20,0,0"
                Background="Transparent"
                ItemsSource="{x:Bind ViewModel.MessageItems}"
                ItemTemplateSelector="{StaticResource MessageTemplateSelector}">

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>

            <StackPanel
                x:Name="NoMessageHint"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="0">

                <TextBlock
                    Foreground="{ThemeResource TextFillColorDisabledBrush}"
                    FontSize="18"
                    TextWrapping="Wrap"
                    VerticalAlignment="Center"
                    FontWeight="SemiLight"
                    MaxWidth="200"
                    Text="Тут поки порожньо, додайте новий запит"/>

                <ImageIcon
                    Width="60"
                    Source="../../Assets/history.png"/>

                <Interactivity:Interaction.Behaviors>
                    <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.MessageItems.Count, Mode=OneWay}"
                        ComparisonCondition="GreaterThan"
                        Value="0">
                        <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=NoMessageHint, Mode=OneTime}" PropertyName="Visibility" Value="Collapsed" />
                    </Interactions:DataTriggerBehavior>
                    <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.MessageItems.Count, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="0">
                        <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=NoMessageHint, Mode=OneTime}" PropertyName="Visibility" Value="Visible" />
                    </Interactions:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </StackPanel>
        </Grid>

        <!--Enter message field-->
        <Grid Grid.Row="1">
            <Border
                Margin="5"
                CornerRadius="7"
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>

                    <!--Send command button-->
                    <Button
                        x:Name="SendCommandButton"
                        HorizontalAlignment="Center"
                        Height="30"
                        Width="30"
                        Command="{x:Bind ViewModel.SendEnteredTextCommand}">

                        <Viewbox
                            Margin="-3,-4,-5,-4">
                            
                            <SymbolIcon 
                                Symbol="Send"/>
                        </Viewbox>

                        <Interactivity:Interaction.Behaviors>
                            <Interactions:DataTriggerBehavior 
                                    Binding="{x:Bind ViewModel.IsEnterCommandPanelEnabled, Mode=TwoWay}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=SendCommandButton, Mode=OneTime}" PropertyName="IsEnabled" Value="True"/>
                            </Interactions:DataTriggerBehavior>
                            <Interactions:DataTriggerBehavior 
                                    Binding="{x:Bind ViewModel.IsEnterCommandPanelEnabled, Mode=TwoWay}"
                                    ComparisonCondition="Equal"
                                    Value="False">
                                <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=SendCommandButton, Mode=OneTime}" PropertyName="IsEnabled" Value="False"/>
                            </Interactions:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </Button>

                    <TextBox
                        x:Name="EnterCommandTextBox"
                        TextWrapping="Wrap"
                        Grid.Column="1"
                        BorderThickness="0"
                        Style="{StaticResource TransparentTextBoxStyle}"
                        VerticalAlignment="Center"
                        FontSize="13"
                        PlaceholderText="Введіть вашу команду..."
                        KeyDown="TextBox_KeyDown"
                        Text="{x:Bind ViewModel.CommandTextField, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    </TextBox>

                    <StackPanel
                        Grid.Column="2"
                        Orientation="Horizontal"
                        Spacing="5">

                        <!--lock speak button-->
                        <Button
                            x:Name="LockSpeakButton"
                            Height="30"
                            Width="30">

                            <Viewbox
                                Margin="-4">

                                <FontIcon
                                    FontFamily="Segoe MDL2 Assets" 
                                    Glyph="&#xE72E;"/>
                            </Viewbox>
                        </Button>

                        <!--speak button-->
                        <Button
                            x:Name="SpeakButton"
                            Style="{ThemeResource AccentButtonStyle}"
                            Height="40"
                            Width="40"
                            Command="{x:Bind ViewModel.StartListenCommand}">

                            <Viewbox
                                Margin="-1">

                                <SymbolIcon Symbol="Microphone"/>
                            </Viewbox>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <!--"Disables" EnterCommandPanel by covering it-->
            <Border 
                Margin="5"
                CornerRadius="7"
                Visibility="Collapsed"
                x:Name="EnabledCoverBorder"
                Background="{ThemeResource LayerFillColorDefaultBrush}"
                Opacity="1">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="45"/>
                    </Grid.ColumnDefinitions>

                    <!--cancel button-->
                    <Button
                        x:Name="CancelButton"
                        Grid.Column="1"
                        Height="40"
                        Width="40"
                        Command="{x:Bind ViewModel.CancelCommandExecutionCommand}"
                        Style="{StaticResource CancelButtonStyle}"
                        BorderThickness="0"
                        ToolTipService.ToolTip="Зупинити виконання команди">

                        <Viewbox
                            Margin="1.5,2.5,0,0">

                            <SymbolIcon 
                                Foreground="{ThemeResource TextOnAccentAAFillColorPrimary}"
                                Symbol="Cancel"/>
                        </Viewbox>
                    </Button>
                </Grid>

                <Interactivity:Interaction.Behaviors>
                    <Interactions:DataTriggerBehavior 
                            Binding="{x:Bind ViewModel.IsEnterCommandPanelEnabled, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="True">
                        <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=EnabledCoverBorder, Mode=OneTime}" PropertyName="Visibility" Value="Collapsed"/>
                    </Interactions:DataTriggerBehavior>
                    <Interactions:DataTriggerBehavior 
                            Binding="{x:Bind ViewModel.IsEnterCommandPanelEnabled, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="False">
                        <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=EnabledCoverBorder, Mode=OneTime}" PropertyName="Visibility" Value="Visible"/>
                    </Interactions:DataTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Border>
        </Grid>

        <!--Command executing progress-->
        <ProgressBar
            x:Name="CommandExecutingProgressBar"
            Visibility="Collapsed"
            Value="{x:Bind ViewModel.AppState.CommandExecutionProgress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Grid.Row="2">

            <Interactivity:Interaction.Behaviors>
                <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.AppState.IsCommandRunning, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="True">
                    <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=CommandExecutingProgressBar, Mode=OneTime}" PropertyName="Visibility" Value="Visible"/>
                </Interactions:DataTriggerBehavior>
                <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.AppState.IsCommandRunning, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="False">
                    <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=CommandExecutingProgressBar, Mode=OneTime}" PropertyName="Visibility" Value="Collapsed"/>
                </Interactions:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ProgressBar>

        <!--Speaking active indicator-->
        <Border
            x:Name="VoiceSpeakingIsActive"
            Visibility="Collapsed"
            Height="3"
            Grid.Row="3"
            Background="{ThemeResource AccentAAFillColorDefaultBrush}">

            <Interactivity:Interaction.Behaviors>
                <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.AppState.IsListening, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="True">
                    <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=VoiceSpeakingIsActive, Mode=OneTime}" PropertyName="Visibility" Value="Visible"/>
                </Interactions:DataTriggerBehavior>
                <Interactions:DataTriggerBehavior 
                        Binding="{x:Bind ViewModel.AppState.IsListening, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="False">
                    <Interactions:ChangePropertyAction TargetObject="{Binding ElementName=VoiceSpeakingIsActive, Mode=OneTime}" PropertyName="Visibility" Value="Collapsed"/>
                </Interactions:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Border>
    </Grid>
</Page>
