<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Exeon.Views.Resources"
    xmlns:tools="using:Exeon.ViewModels.Tools"
    xmlns:models="using:Exeon.Models.Chat"
    xmlns:converters="using:Exeon.ViewModels.Converters"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals">

    <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>

    <x:String x:Key="DeleteActionTitle">Видалити дію</x:String>

    <SolidColorBrush x:Key="LightRedColor">#FF474C</SolidColorBrush>
    <SolidColorBrush x:Key="MintGreenColor">#3EB489</SolidColorBrush>

    <tools:MessageTemplateSelector x:Key="MessageTemplateSelector"
        UserMessageTemplate="{StaticResource UserMessageTemplate}"
        AssistantMessageTemplate="{StaticResource AssistantMessageTemplate}"/>

    <tools:ActionTemplateSelector 
        x:Key="ShortActionTemplateSelector" 
        FileActionTemplate="{StaticResource FileActionTemplateShort}"
        WebActionTemplate="{StaticResource WebActionTemplateShort}"
        PauseActionTemplate="{StaticResource PauseActionTemplateShort}"
        BrightnessActionTemplate="{StaticResource BrightnessActionTemplateShort}"
        SoundActionTemplate="{StaticResource SoundActionTemplateShort}"/>

    <tools:InternalMTemplateSelector x:Key="InternalMTemplateSelector"
            AssistantActionSucceededMessageTemplate="{StaticResource AssistantActionSucceededMessageTemplate}"
            AssistantActionFailedMessageTemplate="{StaticResource AssistantActionFailedMessageTemplate}"
            AssistantActionDelayMessageTemplate="{StaticResource AssistantActionDelayMessageTemplate}"
            AssistantSimpleMessageTemplate="{StaticResource AssistantSimpleMessageTemplate}"/>

    <Style TargetType="TextBox" x:Key="TransparentTextBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                            <Grid>
                                <ScrollViewer x:Name="ContentElement"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          Margin="-1,0,0,0"
                                          Padding="{TemplateBinding Padding}"
                                          IsTabStop="False"
                                          IsDeferredScrollingEnabled="False" />
                                <ContentPresenter x:Name="PlaceholderTextContentPresenter"
                                              Content="{TemplateBinding PlaceholderText}"
                                              Foreground="{TemplateBinding PlaceholderForeground}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              IsHitTestVisible="False" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
        <Setter Property="PlaceholderForeground" Value="Gray" />
    </Style>

    <!-- UserMessageItem template-->
    <DataTemplate x:Key="UserMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="10,0,30,10">
            
            <Border 
                Background="{ThemeResource AccentFillColorDefaultBrush}" 
                CornerRadius="7"
                Padding="10,8,10,10">

                <TextBlock  
                    Text="{Binding Text}"
                    HorizontalAlignment="Center"
                    TextWrapping="Wrap"
                    FontSize="13"
                    Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}">
                </TextBlock>
            </Border>

            <TextBlock
                Foreground="{ThemeResource TextFillColorDisabledBrush}"
                HorizontalAlignment="Left"
                Margin="5,0,0,0"
                FontSize="11"
                Text="{Binding SendingTime, Converter={StaticResource DateTimeToStringConverter}}"/>
        </StackPanel>
    </DataTemplate>

    <!-- AssistantMessageItem -->
    <DataTemplate x:Key="AssistantMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="10,0,30,15">

            <Border 
                Background="Transparent" 
                CornerRadius="7"
                Padding="0,8,10,0">

                <ListBox
                    ItemTemplateSelector="{StaticResource InternalMTemplateSelector}"
                    Background="Transparent"
                    ItemsSource="{Binding MessageItems}">

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Border>

            <TextBlock
                Foreground="{ThemeResource TextFillColorDisabledBrush}"
                HorizontalAlignment="Left"
                Margin="5,-3,0,0"
                FontSize="11"
                Text="{Binding SendingTime, Converter={StaticResource DateTimeToStringConverter}}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AssistantActionSucceededMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="0,0,0,6">

            <Border 
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" 
                CornerRadius="7">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--header-->
                    <StackPanel
                        x:Name="headerStack"
                        Padding="10,10,13,10"
                        Orientation="Horizontal"
                        Spacing="10">

                        <Viewbox
                            Margin="2,0,0,0"
                            Width="25">
                            
                            <SymbolIcon
                                Foreground="{ThemeResource AccentAAFillColorTertiaryBrush}"
                                Symbol="Accept"/>
                        </Viewbox>

                        <TextBlock 
                            VerticalAlignment="Center"
                            Margin="0,-1.5,0,0"
                            FontWeight="SemiBold"
                            Text="Дію успішно виконано!"
                            FontSize="13"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    </StackPanel>

                    <!--details-->
                    <Expander
                        HorizontalAlignment="Stretch"
                        Grid.Row="1"
                        MinHeight="20">

                        <Expander.Header>
                            <TextBlock
                                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                                FontWeight="SemiBold"
                                FontSize="11"
                                Text="Подробиці виконання ..."/>
                        </Expander.Header>

                        <Expander.Content>
                            <TextBlock
                                TextWrapping="Wrap"
                                Text="{Binding Text}"/>
                        </Expander.Content>
                    </Expander>
                </Grid>
            </Border>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AssistantActionFailedMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="0,0,0,6">

            <Border 
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" 
                CornerRadius="7">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--header-->
                    <StackPanel
                        x:Name="headerStack"
                        Padding="10,10,13,10"
                        Orientation="Horizontal"
                        Spacing="10">

                        <Viewbox
                            Margin="2,0,0,0"
                            Width="25">

                            <SymbolIcon
                                Foreground="{ThemeResource AccentAAFillColorTertiaryBrush}"
                                Symbol="Cancel"/>
                        </Viewbox>

                        <TextBlock 
                            VerticalAlignment="Center"
                            Margin="0,-1.5,0,0"
                            FontWeight="SemiBold"
                            Text="Не вдалось виконати!"
                            FontSize="13"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"/>
                    </StackPanel>

                    <!--details-->
                    <Expander
                        HorizontalAlignment="Stretch"
                        Grid.Row="1"
                        MinHeight="20">

                        <Expander.Header>
                            <TextBlock
                                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                                FontWeight="SemiBold"
                                FontSize="11"
                                Text="Подробиці виконання ..."/>
                        </Expander.Header>

                        <Expander.Content>
                            <TextBlock
                                TextWrapping="Wrap"
                                Text="{Binding Text}"/>
                        </Expander.Content>
                    </Expander>
                </Grid>
            </Border>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AssistantActionDelayMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="0,0,0,6">

            <Border 
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" 
                CornerRadius="7">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--header-->
                    <ProgressBar
                        Margin="10,0,10,0"
                        Height="25"
                        Value="{Binding Progress, Mode=OneWay}"/>

                    <!--details-->
                    <Expander
                        HorizontalAlignment="Stretch"
                        Grid.Row="1"
                        MinHeight="20">

                        <Expander.Header>
                            <TextBlock
                                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                                FontWeight="SemiBold"
                                FontSize="11"
                                Text="Подробиці виконання ..."/>
                        </Expander.Header>

                        <Expander.Content>
                            <TextBlock>
                                <Run Text="Встановлена пауза на"/>
                                <Run Text="{Binding Delay}"/><Run Text="s"/>
                            </TextBlock>
                        </Expander.Content>
                    </Expander>
                </Grid>
            </Border>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="AssistantSimpleMessageTemplate">
        <StackPanel 
            MaxWidth="500"
            HorizontalAlignment="Left"
            Margin="0,0,0,6">

            <Border 
                Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" 
                CornerRadius="7"
                Padding="10,8,10,10">

                <TextBlock  
                    Text="{Binding Text}"
                    HorizontalAlignment="Center"
                    TextWrapping="Wrap"
                    FontSize="13"
                    Foreground="{ThemeResource TextFillColorPrimaryBrush}">
                </TextBlock>
            </Border>
        </StackPanel>
    </DataTemplate>

    <!--Action templates-->
    <DataTemplate x:Key="FileActionTemplateShort">
        <Grid Margin="0,5,0,5" ToolTipService.ToolTip="{Binding PathToFile}">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ImageIcon
                Height="25"
                Source="../../Assets/folder.png"
                Grid.Column="0"/>

            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="13"
                Margin="10,0,5,0"
                TextTrimming="CharacterEllipsis"
                Text="{Binding PathToFile}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="WebActionTemplateShort">
        <Grid Margin="0,5,0,5" ToolTipService.ToolTip="{Binding Uri}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ImageIcon
                Height="25"
                Source="../../Assets/web.png"
                Grid.Column="0"/>

            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="13"
                Margin="10,0,5,0"
                TextTrimming="CharacterEllipsis"
                Text="{Binding Uri}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PauseActionTemplateShort">
        <Grid Margin="0,5,0,5">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ImageIcon
                Height="25"
                Source="../../Assets/clock.png"
                Grid.Column="0"/>

            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="13"
                Margin="10,0,5,0"
                TextTrimming="CharacterEllipsis">
                
                <Run Text="Зробити паузу на:"/>
                <Run Text="{Binding DelayInSeconds}"/>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BrightnessActionTemplateShort">
        <Grid Margin="0,5,0,5">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ImageIcon
                Height="25"
                Source="../../Assets/brightness.png"
                Grid.Column="0"/>

            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="13"
                Margin="10,0,5,0">
                
                <Run Text="Яскравість на:"/>
                <Run Text="{Binding BrightnessLevel}"/><Run Text="%"/>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SoundActionTemplateShort">
        <Grid Margin="0,5,0,5">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ImageIcon
                Height="25"
                Source="../../Assets/sound.png"
                Grid.Column="0"/>

            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="13"
                Margin="10,0,5,0">
    
                <Run Text="Звук на:"/>
                <Run Text="{Binding SoundLevel}"/><Run Text="%"/>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <!--Styles-->
    <Style x:Key="AccentDropDownButtonStyle" TargetType="controls:DropDownButton">
        <Setter Property="Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BackgroundSizing="{TemplateBinding BackgroundSizing}">
                        <Grid.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </Grid.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOver" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorSecondaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ChevronIcon.(controls:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ChevronIcon" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!-- DisabledVisual Should be handled by the control, not the animated icon. -->
                                        <Setter Target="ChevronIcon.(controls:AnimatedIcon.State)" Value="Normal" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />
                        <controls:AnimatedIcon x:Name="ChevronIcon" Grid.Column="1" Margin="8,0,0,0" Width="12" Height="12" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                            <animatedvisuals:AnimatedChevronDownSmallVisualSource />
                            <controls:AnimatedIcon.FallbackIconSource>
                                <controls:FontIconSource FontSize="8" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE96E;" IsTextScaleFactorEnabled="False" />
                            </controls:AnimatedIcon.FallbackIconSource>
                        </controls:AnimatedIcon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Changed back colors of: ExpanderHeader, ExpanderContent. Changed the Padding-->
    <Style x:Key="CustomExpanderStyle" TargetType="controls:Expander">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefaultBrush}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Expander">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="ExpandUp">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />

                                    </VisualState.Setters>
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseDown">
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandDown">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />

                                    </VisualState.Setters>
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseUp">
                                    <VisualState.Storyboard>

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="Down" />
                                <VisualState x:Name="Up">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}" />
                                        <Setter Target="ExpanderContent.BorderThickness" Value="{StaticResource ExpanderContentUpBorderThickness}" />
                                        <Setter Target="ExpanderContent.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        <Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
                                        <Setter Target="ExpanderContentClip.(Grid.Row)" Value="0" />
                                        <Setter Target="Row0.Height" Value="*" />
                                        <Setter Target="Row1.Height" Value="Auto" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto" />
                            <RowDefinition x:Name="Row1" Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="ExpanderHeader" AutomationProperties.AutomationId="ExpanderToggleButton" Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{ThemeResource ExpanderHeaderBorderBrush}" BorderThickness="{ThemeResource ExpanderHeaderBorderThickness}" MinHeight="{TemplateBinding MinHeight}" CornerRadius="{TemplateBinding CornerRadius}" IsEnabled="{TemplateBinding IsEnabled}" Padding="{StaticResource ExpanderHeaderPadding}" Style="{StaticResource ExpanderHeaderDownStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}" VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!-- The clip is a composition clip applied in code -->
                        <Border x:Name="ExpanderContentClip" Grid.Row="1">
                            <Border x:Name="ExpanderContent" Visibility="Collapsed" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource ExpanderContentDownBorderThickness}" MinHeight="{TemplateBinding MinHeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border.RenderTransform>
                                    <CompositeTransform />
                                </Border.RenderTransform>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource LightRedColor}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" CornerRadius="{TemplateBinding CornerRadius}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                        <ContentPresenter.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </ContentPresenter.BackgroundTransition>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF6865" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF6865" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="PointerOver" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightRedColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightRedColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="Pressed" />

                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <!-- DisabledVisual Should be handled by the control, not the animated icon. -->
                                        <Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="Normal" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteTriggerCommandButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter 
                        x:Name="ContentPresenter" 
                        Background="{TemplateBinding Background}" 
                        Foreground="{TemplateBinding Foreground}" 
                        BackgroundSizing="{TemplateBinding BackgroundSizing}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Content="{TemplateBinding Content}" 
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        ContentTransitions="{TemplateBinding ContentTransitions}" 
                        CornerRadius="{TemplateBinding CornerRadius}" 
                        Padding="{TemplateBinding Padding}" 
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        xmlns:local="using:Microsoft.UI.Xaml.Controls"
                        local:AnimatedIcon.State="Normal">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonState">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="PointerOver" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorSelectedTextBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorSelectedTextBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorPrimaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.(controls:AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Trigger commands ListBox data template-->
    <DataTemplate x:Key="TriggerCommandItemTemplate">
        <Grid>
            <Border
                HorizontalAlignment="Left"
                CornerRadius="5"
                Width="auto"
                Background="{ThemeResource AccentFillColorSecondaryBrush}">

                <StackPanel 
                    Margin="10,0,0,0"
                    Height="auto"
                    Orientation="Horizontal"
                    Spacing="10">

                    <TextBlock
                        Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}"
                        Margin="0,4,0,0"
                        Text="Команда хахах Команда"/>

                    <Button Style="{StaticResource DeleteTriggerCommandButtonStyle}" Width="30" Height="30">
                        <Viewbox Margin="-3.5">
                            <SymbolIcon
                                Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}"
                                Symbol="Cancel"/>
                        </Viewbox>
                    </Button>

                </StackPanel>
            </Border>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
